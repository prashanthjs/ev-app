name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_REGION: ${{secrets.AWS_REGION}}
  ECR_REGISTRY: ${{secrets.ECR_REGISTRY}}
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm install

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v4

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Print NX environment variables
        run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"
          echo "REF: ${{ github.ref }}"
          echo "branch: ${{ steps.extract_branch.outputs.branch }}"

      - name: Run, build, and test affected apps
        run: npx nx affected -t lint test build

      - name: Configure AWS credentials
        if: steps.extract_branch.outputs.branch == 'main'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        if: steps.extract_branch.outputs.branch == 'main'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push docker image
        if: steps.extract_branch.outputs.branch == 'main'
        run: npx nx affected -t  docker-push --registry=${{ env.ECR_REGISTRY }} --tagVersion:${{ github.sha }}
